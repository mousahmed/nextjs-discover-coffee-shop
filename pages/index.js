import Head from "next/head";
import Image from "next/image";
import styles from "../styles/home.module.css";
import Banner from "../components/banner";
import Card from "../components/card";

import {fetchCoffeeStores} from "../lib/coffee-stores";
import useTrackLocation from "../hooks/use-track-location";
import {useEffect, useState, useContext} from "react";
import {ACTION_TYPES, StoreContext} from "../store/store-context";

export async function getStaticProps() {
	const coffeeStores = await fetchCoffeeStores();
	return {
		props: {coffeeStores},
	};
}

export default function Home(props) {
	const {handleTrackLocation, locationErrorMsg, isFindingLocation} =
		useTrackLocation();

	// const [coffeeStores, setCoffeeStores] = useState("");
	const [coffeeStoresError, setCoffeeStoresError] = useState(null);
	const {dispatch, state} = useContext(StoreContext);
	const {coffeeStores, latLong} = state;

	console.log({latLong, locationErrorMsg});
	console.log(coffeeStores);

	useEffect(() => {
		async function setCoffeeStoresByLocation() {
			if (latLong) {
				try {
					const response = await fetch(
						`/api/getCoffeeStoresByLocation?latLong=${latLong}&limit=30`
					);
					const coffeeStores = await response.json();
					dispatch({
						type: ACTION_TYPES.SET_COFFEE_STORES,
						payload: {coffeeStores},
					});
					setCoffeeStoresError("");
				} catch (error) {
					console.log({error});
					setCoffeeStoresError(error.message);
				}
			}
		}
		setCoffeeStoresByLocation();
	}, [latLong]);

	const handleOnBannerBtnClick = (event) => {
		console.log("on banner click");
		handleTrackLocation();
	};
	return (
		<div className={styles.container}>
			<Head>
				<title>Coffee Connoisseur</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>

			<main className={styles.main}>
				<Banner
					buttonText={isFindingLocation ? "Loading..." : "View Stores nearby"}
					handleOnClick={handleOnBannerBtnClick}
				/>
				{locationErrorMsg && <p>Something went wrong: {locationErrorMsg}</p>}
				{coffeeStoresError && <p>Something went wrong: {coffeeStoresError}</p>}
				<div className={styles.heroImage}>
					<Image src="/static/hero-image.png" width={700} height={400} />
				</div>

				<div>
					{coffeeStores.length > 0 && (
						<div className={styles.sectionWrapper}>
							<h2 className={styles.heading2}>Stores Near You</h2>
							<div className={styles.cardLayout}>
								{coffeeStores.map((store) => {
									return (
										<Card
											key={store.id}
											name={store.name}
											imgUrl={
												store.imgUrl ||
												"https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
											}
											href={`/coffee-store/${store.id}`}
											className={styles.card}
										/>
									);
								})}
							</div>
						</div>
					)}
					{props.coffeeStores.length > 0 && (
						<div className={styles.sectionWrapper}>
							<h2 className={styles.heading2}>Toronto Stores</h2>
							<div className={styles.cardLayout}>
								{props.coffeeStores.map((store) => {
									return (
										<Card
											key={store.id}
											name={store.name}
											imgUrl={
												store.imgUrl ||
												"https://images.unsplash.com/photo-1498804103079-a6351b050096?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=2468&q=80"
											}
											href={`/coffee-store/${store.id}`}
											className={styles.card}
										/>
									);
								})}
							</div>
						</div>
					)}
				</div>
			</main>
		</div>
	);
}
